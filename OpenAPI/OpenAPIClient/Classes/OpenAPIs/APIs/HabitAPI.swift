//
// HabitAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class HabitAPI {
    /**
     유저의 특정 습관의 상세 정보 불러오기
     
     - parameter habitId: (path) PK of habit 
     - parameter userId: (query) PK of user 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func habitHabitIdGet(habitId: Int, userId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: HabitDetail?, _ error: Error?) -> Void)) {
        habitHabitIdGetWithRequestBuilder(habitId: habitId, userId: userId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     유저의 특정 습관의 상세 정보 불러오기
     - GET /habit/{habitId}
     - return HabitDetail
     - parameter habitId: (path) PK of habit 
     - parameter userId: (query) PK of user 
     - returns: RequestBuilder<HabitDetail> 
     */
    open class func habitHabitIdGetWithRequestBuilder(habitId: Int, userId: Int) -> RequestBuilder<HabitDetail> {
        var path = "/habit/{habitId}"
        let habitIdPreEscape = "\(APIHelper.mapValueToPathItem(habitId))"
        let habitIdPostEscape = habitIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{habitId}", with: habitIdPostEscape, options: .literal, range: nil)
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String: Any]? = nil

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "user_id": userId.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<HabitDetail>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
